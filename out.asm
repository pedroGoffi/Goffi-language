BITS 64
dump:
  push  rbp
  mov   rbp, rsp
  sub   rsp, 64
  mov   QWORD  [rbp-56], rdi
  mov   QWORD  [rbp-8], 1
  mov   eax, 32
  sub   rax, QWORD  [rbp-8]
  mov   BYTE  [rbp-48+rax], 10
.L2:
  mov   rcx, QWORD  [rbp-56]
  mov   rdx, -3689348814741910323
  mov   rax, rcx
  mul   rdx
  shr   rdx, 3
  mov   rax, rdx
  sal   rax, 2
  add   rax, rdx
  add   rax, rax
  sub   rcx, rax
  mov   rdx, rcx
  mov   eax, edx
  lea   edx, [rax+48]
  mov   eax, 31
  sub   rax, QWORD  [rbp-8]
  mov   BYTE  [rbp-48+rax], dl
  add   QWORD  [rbp-8], 1
  mov   rax, QWORD  [rbp-56]
  mov   rdx, -3689348814741910323
  mul   rdx
  mov   rax, rdx
  shr   rax, 3
  mov   QWORD  [rbp-56], rax
  cmp   QWORD  [rbp-56], 0
  jne   .L2
  mov   eax, 32
  sub   rax, QWORD  [rbp-8]
  lea   rdx, [rbp-48]
  lea   rcx, [rdx+rax]
  mov   rax, QWORD  [rbp-8]
  mov   rdx, rax
  mov   rsi, rcx
  mov   edi, 1
  mov   rax, 1
  syscall
  nop
  leave
  ret
global _start
segment .text
__0:
__1:
proc_main:
   sub rsp, 0
   mov [ret_stack_rsp], rsp
   mov rsp, rax
__2:
__3:
   mov rax, 40
   push rax
   push data__w0
__4:
   push 0x1
__5:
   push 0x1
__6:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
__7:
   pop rax
__8:
   mov rax, 84
   push rax
   push data__w1
__9:
   push 0x1
__10:
   push 0x1
__11:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
__12:
   pop rax
__13:
   mov rax, 54
   push rax
   push data__w2
__14:
   push 0x1
__15:
   push 0x1
__16:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
__17:
   pop rax
__18:
   mov rax, rsp
   mov rsp, [ret_stack_rsp]
   add rsp, 0
   ret
__19:
_start:
   mov [args_ptr], rsp
   mov rax, ret_stack_end
   mov [ret_stack_rsp], rax
   call proc_main
__20:
   mov rax, 60
   mov rdi, 0
   syscall
segment .data
data__w0: db	0x50,0x75,0x74,0x73,0x20,0x6F,0x6E,0x6C,0x79,0x20,0x77,0x6F,0x72,0x6B,0x73,0x20,0x69,0x66,0x20,0x79,0x6F,0x75,0x20,0x69,0x6E,0x63,0x6C,0x75,0x64,0x65,0x20,0x73,0x74,0x64,0x2E,0x67,0x66,0x73,0x6C,0x0A,0
data__w1: db	0x4F,0x62,0x73,0x3A,0x20,0x69,0x20,0x75,0x73,0x65,0x64,0x20,0x2F,0x73,0x74,0x64,0x2F,0x73,0x74,0x64,0x2E,0x67,0x66,0x73,0x6C,0x20,0x61,0x6E,0x64,0x20,0x6E,0x6F,0x74,0x20,0x73,0x74,0x64,0x2E,0x67,0x66,0x73,0x6C,0x20,0x62,0x65,0x63,0x61,0x75,0x73,0x65,0x20,0x74,0x68,0x65,0x20,0x74,0x65,0x73,0x74,0x20,0x66,0x69,0x6C,0x65,0x20,0x69,0x73,0x20,0x75,0x73,0x65,0x20,0x69,0x6E,0x20,0x74,0x68,0x65,0x20,0x72,0x6F,0x6F,0x74,0x0A,0
data__w2: db	0x44,0x6F,0x6E,0x74,0x20,0x74,0x72,0x79,0x20,0x74,0x6F,0x20,0x63,0x6F,0x6D,0x70,0x69,0x6C,0x65,0x20,0x69,0x74,0x20,0x68,0x65,0x72,0x65,0x2C,0x20,0x69,0x6E,0x73,0x74,0x65,0x61,0x64,0x20,0x67,0x6F,0x20,0x61,0x20,0x66,0x6F,0x6C,0x64,0x65,0x72,0x20,0x62,0x61,0x63,0x6B,0x0A,0
segment .bss
args_ptr:	     resq 1
ret_stack_rsp:  resq 1
ret_stack:      resb 4096
ret_stack_end:  resq 1
buffer:    resb    8
